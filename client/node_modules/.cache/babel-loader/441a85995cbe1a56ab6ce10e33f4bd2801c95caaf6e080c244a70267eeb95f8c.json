{"ast":null,"code":"var _jsxFileName = \"/Users/emily/BNTA/bnta_work/capstone_project/Capstone Project/capstonclient/src/Containers/DashBoardContainer.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport CreateAccountForm from \"../Components/CreateAccountForm\";\nimport LoginForm from \"../Components/LoginForm\";\nimport ProfilePage from \"../Components/ProfilePage\";\nimport { createBrowserRouter, RouterProvider, Navigate } from \"react-router-dom\";\nimport Navigation from \"../Components/Navigation\";\nimport DashBoard from \"../Components/DashBoard\";\nimport UpdateEmployeeForm from \"../Components/UpdateEmployeeForm\";\nimport DeleteAccount from \"../Components/DeleteAccount\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashBoardContainer = () => {\n  _s();\n  const [listOfEmployees, setListOfEmployees] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const fetchEmployee = async () => {\n    const response = await fetch(\"http://localhost:8080/employees\");\n    const data = await response.json();\n    setListOfEmployees(data);\n  };\n  const postEmployee = async newEmployee => {\n    const response = await fetch(\"http://localhost:8080/employees\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newEmployee)\n    });\n    const addEmployee = await response.json();\n    setListOfEmployees([...listOfEmployees, addEmployee]);\n  };\n  const updateEmployee = async (id, employee) => {\n    const response = await fetch(`http://localhost:8080/employees/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(employee)\n    });\n    const updateDetails = await response.json();\n    setListOfEmployees([...listOfEmployees, updateDetails]);\n    setCurrentUser(updateDetails);\n  };\n  const deleteEmployee = async id => {\n    const response = await fetch(`http://localhost:8080/employees/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const deleteDetails = await response.json();\n    const updatedEmployees = [...listOfEmployees];\n    const employeeToRemove = updatedEmployees.find(employee => employee.id === deleteDetails);\n    const indexToRemove = updatedEmployees.indexOf(employeeToRemove);\n    updatedEmployees.splice(indexToRemove);\n    setListOfEmployees(updatedEmployees);\n  };\n  useEffect(() => {\n    fetchEmployee();\n  }, []);\n  const appRoutes = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/login\",\n    element: /*#__PURE__*/_jsxDEV(LoginForm, {\n      listOfEmployees: listOfEmployees,\n      setCurrentUser: setCurrentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this),\n    children: [{\n      path: \"dashboard\",\n      element: /*#__PURE__*/_jsxDEV(DashBoard, {\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"newAccount\",\n      element: /*#__PURE__*/_jsxDEV(CreateAccountForm, {\n        listOfEmployees: listOfEmployees[0],\n        postEmployee: postEmployee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, {\n      path: \"profile\",\n      element: /*#__PURE__*/_jsxDEV(ProfilePage, {\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"/profile/updateDetails\",\n      element: /*#__PURE__*/_jsxDEV(UpdateEmployeeForm, {\n        updateEmployee: updateEmployee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"/deleteAccount\",\n      element: /*#__PURE__*/_jsxDEV(DeleteAccount, {\n        deleteEmployee: deleteEmployee,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: appRoutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(DashBoardContainer, \"pRCql3YoLbJ68VxwcigjbVk43Rs=\");\n_c = DashBoardContainer;\nexport default DashBoardContainer;\nvar _c;\n$RefreshReg$(_c, \"DashBoardContainer\");","map":{"version":3,"names":["useEffect","useState","CreateAccountForm","LoginForm","ProfilePage","createBrowserRouter","RouterProvider","Navigate","Navigation","DashBoard","UpdateEmployeeForm","DeleteAccount","jsxDEV","_jsxDEV","Fragment","_Fragment","DashBoardContainer","_s","listOfEmployees","setListOfEmployees","currentUser","setCurrentUser","fetchEmployee","response","fetch","data","json","postEmployee","newEmployee","method","headers","body","JSON","stringify","addEmployee","updateEmployee","id","employee","updateDetails","deleteEmployee","deleteDetails","updatedEmployees","employeeToRemove","find","indexToRemove","indexOf","splice","appRoutes","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","children","router","_c","$RefreshReg$"],"sources":["/Users/emily/BNTA/bnta_work/capstone_project/Capstone Project/capstonclient/src/Containers/DashBoardContainer.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport CreateAccountForm from \"../Components/CreateAccountForm\";\nimport LoginForm from \"../Components/LoginForm\";\nimport ProfilePage from \"../Components/ProfilePage\";\nimport {\n  createBrowserRouter,\n  RouterProvider,\n  Navigate,\n} from \"react-router-dom\";\nimport Navigation from \"../Components/Navigation\";\nimport DashBoard from \"../Components/DashBoard\";\nimport UpdateEmployeeForm from \"../Components/UpdateEmployeeForm\";\nimport DeleteAccount from \"../Components/DeleteAccount\";\n\nconst DashBoardContainer = () => {\n  const [listOfEmployees, setListOfEmployees] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n\n  const fetchEmployee = async () => {\n    const response = await fetch(\"http://localhost:8080/employees\");\n    const data = await response.json();\n    setListOfEmployees(data);\n  };\n\n  const postEmployee = async (newEmployee) => {\n    const response = await fetch(\"http://localhost:8080/employees\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newEmployee),\n    });\n    const addEmployee = await response.json();\n    setListOfEmployees([...listOfEmployees, addEmployee]);\n  };\n\n  const updateEmployee = async (id, employee) => {\n    const response = await fetch(`http://localhost:8080/employees/${id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(employee),\n    });\n    const updateDetails = await response.json();\n    setListOfEmployees([...listOfEmployees, updateDetails]);\n    setCurrentUser(updateDetails);\n  };\n  const deleteEmployee = async (id) => {\n    const response = await fetch(`http://localhost:8080/employees/${id}`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n    const deleteDetails = await response.json();\n    const updatedEmployees = [...listOfEmployees];\n    const employeeToRemove = updatedEmployees.find(employee => employee.id===deleteDetails);\n    const indexToRemove = updatedEmployees.indexOf(employeeToRemove);\n    updatedEmployees.splice(indexToRemove);\n    setListOfEmployees(updatedEmployees);\n  };\n\n  useEffect(() => {\n    fetchEmployee();\n  }, []);\n  const appRoutes = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <Navigate to=\"/login\" />,\n    },\n    {\n      path: \"/login\",\n      element: (\n        <LoginForm\n          listOfEmployees={listOfEmployees}\n          setCurrentUser={setCurrentUser}\n        />\n      ),\n    },\n    {\n      path: \"/\",\n      element: <Navigation />,\n      children: [\n        {\n          path: \"dashboard\",\n          element: <DashBoard currentUser={currentUser} />,\n        },\n        {\n          path: \"newAccount\",\n          element: (\n            <CreateAccountForm\n              listOfEmployees={listOfEmployees[0]}\n              postEmployee={postEmployee}\n            />\n          ),\n        },\n        {\n          path: \"profile\",\n          element: <ProfilePage currentUser={currentUser} />,\n        },\n        {\n          path: \"/profile/updateDetails\",\n          element: <UpdateEmployeeForm updateEmployee={updateEmployee} />,\n        },\n        {\n          path: \"/deleteAccount\",\n          element: (\n            <DeleteAccount\n              deleteEmployee={deleteEmployee}\n              currentUser={currentUser}\n            />\n          ),\n        },\n      ],\n    },\n  ]);\n  return (\n    <>\n      <RouterProvider router={appRoutes} />\n    </>\n  );\n};\nexport default DashBoardContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}