{"ast":null,"code":"var _jsxFileName = \"/Users/emily/BNTA/bnta_work/capstone_project/Capstone Project/capstonclient/src/Containers/DashBoardContainer.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport CreateAccountForm from \"../Components/CreateAccountForm\";\nimport LoginForm from \"../Components/LoginForm\";\nimport ProfilePage from \"../Components/ProfilePage\";\nimport { createBrowserRouter, RouterProvider, Navigate } from \"react-router-dom\";\nimport Navigation from \"../Components/Navigation\";\nimport DashBoard from \"../Components/DashBoard\";\nimport UpdateEmployeeForm from \"../Components/UpdateEmployeeForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashBoardContainer = () => {\n  _s();\n  const [listOfEmployees, setListOfEmployees] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const fetchEmployee = async () => {\n    const response = await fetch(\"http://localhost:8080/employees\");\n    const data = await response.json();\n    setListOfEmployees(data);\n  };\n  const postEmployee = async newEmployee => {\n    const response = await fetch(\"http://localhost:8080/employees\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newEmployee)\n    });\n    const addEmployee = await response.json();\n    setListOfEmployees([...listOfEmployees, addEmployee]);\n  };\n  const updateEmployee = async (id, employee) => {\n    const response = await fetch(`http://localhost:8080/employees/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(employee)\n    });\n    const updateDetails = await response.json();\n    setListOfEmployees([...listOfEmployees, updateDetails]);\n    setCurrentUser(updateDetails);\n  };\n  useEffect(() => {\n    fetchEmployee();\n  }, []);\n  const appRoutes = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this)\n  }, {\n    path: \"/login\",\n    element: /*#__PURE__*/_jsxDEV(LoginForm, {\n      listOfEmployees: listOfEmployees,\n      setCurrentUser: setCurrentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this)\n  }, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this),\n    children: [{\n      path: \"dashboard\",\n      element: /*#__PURE__*/_jsxDEV(DashBoard, {\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)\n    }, {\n      path: \"newaccount\",\n      element: /*#__PURE__*/_jsxDEV(CreateAccountForm, {\n        listOfEmployees: listOfEmployees[0],\n        postEmployee: postEmployee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }, this)\n    }, {\n      path: \"profile\",\n      element: /*#__PURE__*/_jsxDEV(ProfilePage, {\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this)\n    }, {\n      path: \"/profile/updateDetails\",\n      element: /*#__PURE__*/_jsxDEV(UpdateEmployeeForm, {\n        updateEmployee: updateEmployee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this)\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: appRoutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n_s(DashBoardContainer, \"pRCql3YoLbJ68VxwcigjbVk43Rs=\");\n_c = DashBoardContainer;\nexport default DashBoardContainer;\nvar _c;\n$RefreshReg$(_c, \"DashBoardContainer\");","map":{"version":3,"names":["useEffect","useState","CreateAccountForm","LoginForm","ProfilePage","createBrowserRouter","RouterProvider","Navigate","Navigation","DashBoard","UpdateEmployeeForm","jsxDEV","_jsxDEV","Fragment","_Fragment","DashBoardContainer","_s","listOfEmployees","setListOfEmployees","currentUser","setCurrentUser","fetchEmployee","response","fetch","data","json","postEmployee","newEmployee","method","headers","body","JSON","stringify","addEmployee","updateEmployee","id","employee","updateDetails","appRoutes","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","children","router","_c","$RefreshReg$"],"sources":["/Users/emily/BNTA/bnta_work/capstone_project/Capstone Project/capstonclient/src/Containers/DashBoardContainer.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport CreateAccountForm from \"../Components/CreateAccountForm\";\nimport LoginForm from \"../Components/LoginForm\";\nimport ProfilePage from \"../Components/ProfilePage\";\nimport { createBrowserRouter, RouterProvider, Navigate} from \"react-router-dom\";\nimport Navigation from \"../Components/Navigation\";\nimport DashBoard from \"../Components/DashBoard\";\nimport UpdateEmployeeForm from \"../Components/UpdateEmployeeForm\";\n\n\nconst DashBoardContainer = () => {\n   const [listOfEmployees, setListOfEmployees] = useState([]);\n   const [currentUser, setCurrentUser] = useState({});\n\n   const fetchEmployee = async () => {\n      const response = await fetch(\"http://localhost:8080/employees\");\n      const data = await response.json();\n      setListOfEmployees(data);\n   };\n\n   const postEmployee = async (newEmployee) => {\n      const response = await fetch(\"http://localhost:8080/employees\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify(newEmployee),\n      });\n      const addEmployee = await response.json();\n      setListOfEmployees([...listOfEmployees, addEmployee]);\n   };\n\n   const updateEmployee = async (id, employee) => {\n      const response = await fetch(`http://localhost:8080/employees/${id}`, {\n         method: \"PUT\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify(employee),\n      });\n      const updateDetails = await response.json();\n      setListOfEmployees([...listOfEmployees, updateDetails]);\n      setCurrentUser(updateDetails);\n   };\n\n   useEffect(() => {\n      fetchEmployee();\n   }, []);\n   const appRoutes = createBrowserRouter([\n      {\n         path: \"/\",\n         element: <Navigate to=\"/login\" />,\n      },\n      {\n         path: \"/login\",\n         element: <LoginForm listOfEmployees={listOfEmployees} setCurrentUser={setCurrentUser} />,\n      },\n      {\n         path: \"/\",\n         element: <Navigation />,\n         children: [\n            {\n               path: \"dashboard\",\n               element: <DashBoard currentUser={currentUser} />,\n            },\n            {\n               path: \"newaccount\",\n               element: (\n                  <CreateAccountForm\n                     listOfEmployees={listOfEmployees[0]}\n                     postEmployee={postEmployee}\n                  />\n               ),\n            },\n            {\n               path: \"profile\",\n               element: <ProfilePage currentUser={currentUser} />,\n            },\n            {\n               path: \"/profile/updateDetails\",\n               element: <UpdateEmployeeForm updateEmployee={updateEmployee}/>\n            }\n         ],\n      },\n   ]);\n   return (\n      <>\n         <RouterProvider router={appRoutes} />\n      </>\n   );\n};\nexport default DashBoardContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}